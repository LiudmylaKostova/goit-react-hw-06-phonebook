{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","redux/phoneBook/actions.js","redux/phoneBook/reducer.js","redux/store.js","components/MyButton/MyButton.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js","components/ContactsList/ContactsList.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","removeContact","filterContacts","items","createReducer","state","payload","filter","item","id","combineReducers","persistConfig","key","storage","rootReducer","contacts","phonebookReducer","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","MyButton","value","handleClick","style","disable","className","onClick","disabled","ContactForm","name","number","handleChange","e","target","setState","handleSubmitForm","preventDefault","props","some","contact","alert","shortid","generate","onAddContact","this","styles","form","onSubmit","label","input","type","onChange","button","Component","mapDispatchToProps","connect","ContactItem","handleDelete","li","ContactsList","useSelector","toLowerCase","filteredContacts","includes","dispatch","useDispatch","ul","map","mapDispatchToprops","onFilterContacts","div","Label","event","App","console","log","title","length","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.fdbbc4b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Filter_div__2UYSN\",\"label\":\"Filter_label__3P_87\",\"input\":\"Filter_input__37Qqm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1Jjrd\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('phonebook/addContact');\r\nexport const removeContact = createAction('phonebook/removeContact');\r\nexport const filterContacts = createAction('phonebook/filterContacts');\r\n\r\n// ==============Было до загрузки toolkit==============\r\n\r\n// import { ADD_CONTACT, REMOVE_CONTACT, FILTER_CONTACTS } from './types';\r\n\r\n// export const addContact = item => {\r\n//   return {\r\n//     type: ADD_CONTACT,\r\n//     payload: item,\r\n//   };\r\n// };\r\n\r\n// export const removeContact = id => {\r\n//   return {\r\n//     type: REMOVE_CONTACT,\r\n//     payload: id,\r\n//   };\r\n// };\r\n// export const filterContacts = value => {\r\n//   return {\r\n//     type: FILTER_CONTACTS,\r\n//     payload: value,\r\n//   };\r\n// };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, removeContact, filterContacts } from './actions';\r\n\r\nconst onAddContact = (state, { payload }) => [...state, payload];\r\nconst onRemoveContact = (state, { payload }) =>\r\n  state.filter(item => item.id !== payload);\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: onAddContact,\r\n  [removeContact]: onRemoveContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n\r\n// ==============c combineReducers без toolkit================\r\n\r\n// const items = (state = [], action) => {\r\n//   switch (action.type) {\r\n//     case ADD_CONTACT:\r\n//       return [...state, action.payload];\r\n//     case REMOVE_CONTACT:\r\n//       return state.filter(item => item.id !== action.payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// const filter = (state = '', action) => {\r\n//   switch (action.type) {\r\n//     case FILTER_CONTACTS:\r\n//       return action.payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// export default combineReducers({ items, filter });\r\n\r\n// ==============Было до загрузки toolkit==============\r\n\r\n// import { ADD_CONTACT, REMOVE_CONTACT, FILTER_CONTACTS } from './types';\r\n// import { combineReducers } from 'redux';\r\n\r\n// const initialState = {\r\n//   contacts: {\r\n//     items: [],\r\n//     filter: '',\r\n//   },\r\n// };\r\n// const phonebookReducer = (state = { ...initialState }, action) => {\r\n//   console.log(state);\r\n//   switch (action.type) {\r\n//     case ADD_CONTACT:\r\n//       return {\r\n//         ...state,\r\n//         contacts: {\r\n//           // filter: '',\r\n//           ...state.contacts,\r\n//           items: [...state.contacts.items, action.payload],\r\n//         },\r\n//       };\r\n//     case REMOVE_CONTACT:\r\n//       // console.log('remove_contact');\r\n//       return {\r\n//         ...state,\r\n\r\n//         contacts: {\r\n//           ...state.contacts,\r\n//           items: state.contacts.items.filter(\r\n//             item => item.id !== action.payload,\r\n//           ),\r\n//         },\r\n//       };\r\n//     case FILTER_CONTACTS:\r\n//       return {\r\n//         ...state,\r\n//         contacts: {\r\n//           ...state.contacts,\r\n//           filter: action.payload,\r\n//         },\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default phonebookReducer;\r\n","import {\r\n  configureStore,\r\n  combineReducers,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './phoneBook/reducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phonebookReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// export default { store, persistor };\r\n\r\n// ==============Было до загрузки toolkit==============\r\n// import { createStore, combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// import phonebookReducer from './phoneBook/reducer';\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: phonebookReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// export default store;\r\n","const MyButton = ({ id, value, handleClick, style, disable }) => {\r\n  return (\r\n    <button\r\n      className={style}\r\n      onClick={() => handleClick(id)}\r\n      disabled={disable}\r\n    >\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MyButton;\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport shortid from 'shortid';\r\nimport styles from './ContactForm.module.css';\r\nimport MyButton from '../MyButton/MyButton';\r\nimport { addContact } from '../../redux/phoneBook/actions';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n    // if (e.target.value.length > 0) {\r\n    //   this.setState({ disabled: false });\r\n    //   console.log(e.target.value.length);\r\n    // } else {\r\n    //   this.setState({ disabled: true });\r\n    // }\r\n  };\r\n\r\n  handleSubmitForm = e => {\r\n    e.preventDefault();\r\n    if (\r\n      this.props.state.contacts.items.some(\r\n        contact => contact.name === this.state.name,\r\n      )\r\n    ) {\r\n      // console.log(this.props);\r\n      alert(`${this.state.name} already exists in contacts`);\r\n      this.setState({ name: '', number: '' });\r\n    } else {\r\n      const contact = {\r\n        name: this.state.name,\r\n        number: this.state.number,\r\n        id: shortid.generate(),\r\n      };\r\n      this.props.onAddContact(contact);\r\n      this.setState({ name: '', number: '' });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmitForm}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Phone number\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <MyButton\r\n          style={styles.button}\r\n          disable={name === '' || number === '' ? true : false}\r\n          value=\"Add Contact\"\r\n          handleClick={() => {}}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  // console.log({ state });\r\n  return { state };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import styles from '../ContactsList/ContactsList.module.css';\r\nimport MyButton from '../MyButton/MyButton';\r\n\r\nconst ContactItem = ({ name, number, id, handleDelete }) => {\r\n  return (\r\n    <li className={styles.li} key={id}>\r\n      <span className={styles.name}>{name}</span>\r\n      <span className={styles.number}>{number}</span>\r\n      <MyButton\r\n        style={styles.button}\r\n        value={'Delete'}\r\n        id={id}\r\n        handleClick={handleDelete}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport styles from './ContactsList.module.css';\r\nimport { removeContact } from '../../redux/phoneBook/actions';\r\nimport ContactItem from '../ContactItem/ContactItem';\r\n\r\nconst ContactsList = () => {\r\n  const contacts = useSelector(state => state.contacts.items);\r\n  const filter = useSelector(state => state.contacts.filter.toLowerCase());\r\n  const filteredContacts = contacts.filter(contact =>\r\n    contact.name ? contact.name.toLowerCase().includes(filter) : contacts,\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className={styles.ul}>\r\n      {filteredContacts.map(contact => (\r\n        <ContactItem\r\n          id={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n          handleDelete={id => dispatch(removeContact(id))}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n\r\n// ========= удаление контакта без хуков========\r\n\r\n// import { connect } from 'react-redux';\r\n\r\n// const ContactsList = ({ state, removeContact }) => {\r\n//   console.log(state);\r\n//   return (\r\n//     <ul className={styles.ul}>\r\n//       {state.contacts.items.map(contact => (\r\n//         <ContactItem\r\n//           id={contact.id}\r\n//           name={contact.name}\r\n//           number={contact.number}\r\n//           handleDelete={removeContact}\r\n//         />\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// };\r\n\r\n// const mapStateToProps = state => {\r\n//   // console.log({ state });\r\n//   return { state };\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   removeContact: removeContact,\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import { filterContacts } from '../../redux/phoneBook/actions';\r\nimport { connect } from 'react-redux';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = props => {\r\n  return (\r\n    <div className={styles.div}>\r\n      <label className={styles.Label}>\r\n        Search contact's name\r\n        <input\r\n          className={styles.input}\r\n          type=\"search\"\r\n          name=\"filter\"\r\n          id=\"filter\"\r\n          // value={filter}\r\n\r\n          onChange={event => props.onFilterContacts(event.target.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { state };\r\n};\r\n\r\nconst mapDispatchToprops = {\r\n  onFilterContacts: filterContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToprops)(Filter);\r\n","// import './App.css';\nimport { useSelector } from 'react-redux';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport Filter from './components/Filter/Filter';\nimport styles from './App.module.css';\n\nexport default function App() {\n  const contacts = useSelector(state => state.contacts.items);\n  console.log(contacts);\n\n  return (\n    <>\n      <h1 className={styles.title}>Phonebook</h1>\n      <ContactForm />\n\n      <h2 className={styles.title}>Contacts</h2>\n      {contacts.length > 1 ? <Filter /> : null}\n\n      {contacts.length < 1 && (\n        <p className={styles.title}>You don't have contacts </p>\n      )}\n      <ContactsList />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<h2>loading</h2>} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactsList_ul__1YBb3\",\"li\":\"ContactsList_li__iiZiZ\",\"name\":\"ContactsList_name__15Mfw\",\"number\":\"ContactsList_number__37H0H\",\"button\":\"ContactsList_button__gGfbG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3UYCQ\",\"label\":\"ContactForm_label__PwYFW\",\"input\":\"ContactForm_input__2X5ls\",\"button\":\"ContactForm_button__3sVBy\"};"],"sourceRoot":""}